(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o){var i=e.likes,u=e.cardId,a=e.name,c=e.link,s=e.owner,l=n.handleCardClick,f=n.handleLikeClick,p=n.handleTrashClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._cardSelector=r,this._name=a,this._link=c,this._cardTemplate=document.querySelector(this._cardSelector),this._likes=i,this._cardId=u,this._ownerId=s._id,this._userId=o,this._handleCardClick=l,this._handleLikeClick=f,this._handleTrashClick=p}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return this._cardTemplate.content.querySelector(".grid-item").cloneNode(!0)}},{key:"deleteCard",value:function(){this._element.remove()}},{key:"handleLikeButton",value:function(){this._likeButton.classList.toggle("grid-item__like_active")}},{key:"_setEventListeners",value:function(){this._likeButton.addEventListener("click",this._handleLikeClick),this._trash.addEventListener("click",this._handleTrashClick),this._imageItem.addEventListener("click",this._handleCardClick)}},{key:"createCard",value:function(){return this._element=this._getTemplate(),this._imageItem=this._element.querySelector(".grid-item__image"),this._trash=this._element.querySelector(".grid-item__trash"),this._likeButton=this._element.querySelector(".grid-item__like"),this._imageItem.alt=this._name,this._imageItem.src=this._link,this._element.querySelector(".grid-item__name").textContent=this._name,this._ownerId!==this._userId&&this._trash.remove(),this._likesCounter=this._element.querySelector(".grid-item__count"),this.renderLikes(),this.isCardLikedThisUser()&&this._likeButton.classList.add("grid-item__like_active"),this._setEventListeners(),this._element}},{key:"_isLiked",value:function(){return!!this._likeButton.classList.contains("grid-item__like_active")}},{key:"isCardLikedThisUser",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"renderLikes",value:function(){this._likesCounter.textContent=this._likes.length}},{key:"setCountLikes",value:function(e){this._likes=e}},{key:"getIdCard",value:function(){return this._cardId}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._config=t,this._inputsList=Array.from(n.querySelectorAll(this._config.inputSelector)),this._submitButton=this._form.querySelector(this._config.submitButtonSelector)}var t,r;return t=e,(r=[{key:"_showError",value:function(e){this._form.querySelector("#".concat(e.id,"-error")).textContent=e.validationMessage,e.classList.add(this._config.inputErrorClass)}},{key:"_hideError",value:function(e){this._form.querySelector("#".concat(e.id,"-error")).textContent="",e.classList.remove(this._config.inputErrorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_setButtonState",value:function(e){e?(this._submitButton.classList.remove(this._config.inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._config.inactiveButtonClass),this._submitButton.disabled=!0)}},{key:"_setEventListeners",value:function(){var e=this;this._inputsList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._setButtonState(e._form.checkValidity())}))}))}},{key:"cleanInputErrors",value:function(){var e=this;this._inputsList.forEach((function(t){e._hideError(t)})),this._setButtonState(this._form.checkValidity())}},{key:"enableValidation",value:function(){var e=this;this._setEventListeners(this._form),this._inputsList.forEach((function(t){e._hideError(t)})),this._setButtonState(this._form.checkValidity())}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];t?this._container.prepend(e):this._container.append(e)}}])&&o(t.prototype,n),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".popup__btn-close"),this._handleEscClose=this._handleEscClose.bind(this),this._handleClickOverlay=this._handleClickOverlay.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.close()})),this._popup.addEventListener("mousedown",this._handleClickOverlay)}},{key:"_handleClickOverlay",value:function(e){e.target.classList.contains("popup")&&this.close()}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}}])&&u(t.prototype,n),e}();function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImageLink=t._popup.querySelector(".popup__image"),t._popupImageName=t._popup.querySelector(".popup__img-title"),t}return t=u,(n=[{key:"open",value:function(e){this._popupImageLink.src=e.link,this._popupImageName.textContent=e.name,l(h(u.prototype),"open",this).call(this)}}])&&s(t.prototype,n),u}(a);function d(e){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return(m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function v(e,t){return(v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){return!t||"object"!==d(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._formSubmit=t,n._popupForm=n._popup.querySelector(".popup__form"),n._submitButton=n._popup.querySelector(".popup__button"),n._defaultButtonText=n._submitButton.textContent,n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._popupForm.querySelectorAll(".popup__input"),this._formData={},this._inputList.forEach((function(t){e._formData[t.name]=t.value})),this._formData}},{key:"close",value:function(){this._popupForm.reset(),m(k(u.prototype),"close",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;m(k(u.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._formSubmit(e._getInputValues())}))}},{key:"getBtnText",value:function(){return this._submitButton.textContent}},{key:"setBtnText",value:function(e){this._submitButton.textContent=e}},{key:"setDefaultBtnText",value:function(){this._submitButton.textContent=this._defaultButtonText}}])&&y(t.prototype,n),u}(a);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t){var n=t.nameSelector,r=t.infoSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameProfile=document.querySelector(n),this._infoProfile=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{nameItem:this._nameProfile.textContent,infoItem:this._infoProfile.textContent}}},{key:"setUserInfo",value:function(e,t){this._nameProfile.textContent=e,this._infoProfile.textContent=t}},{key:"setAvatar",value:function(e){this._avatar.src=e}}])&&S(t.prototype,n),e}();function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"cards"),{headers:this._headers}).then((function(t){return e._getResponse(t)}))}},{key:"_getResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"users/me"),{headers:this._headers}).then((function(t){return e._getResponse(t)}))}},{key:"setUserInfo",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e,about:t})}).then((function(e){return n._getResponse(e)}))}},{key:"setNewCard",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.value,link:t.value})}).then((function(e){return n._getResponse(e)}))}},{key:"setAvatar",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return t._getResponse(e)}))}},{key:"removeCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._getResponse(e)}))}},{key:"likeCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return t._getResponse(e)}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._getResponse(e)}))}}])&&w(t.prototype,n),e}();function L(e){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(e,t,n){return(T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function B(e,t){return(B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function I(e,t){return!t||"object"!==L(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&B(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._formSubmit=t,n._popupForm=n._popup.querySelector(".popup__form"),n._submitButton=n._popup.querySelector(".popup__button"),n._defaultButtonText=n._submitButton.textContent,n}return t=u,(n=[{key:"close",value:function(){T(q(u.prototype),"close",this).call(this)}},{key:"getBtnText",value:function(){return this._submitButton.textContent}},{key:"setBtnText",value:function(e){this._submitButton.textContent=e}},{key:"setDefaultBtnText",value:function(){this._submitButton.textContent=this._defaultButtonText}},{key:"open",value:function(e){this._item=e,T(q(u.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;T(q(u.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._formSubmit(e._item)}))}}])&&O(t.prototype,n),u}(a),P=document.querySelector(".popup__form_type_create"),j=(document.querySelector(".popup_add"),document.querySelector(".popup__input_add_name")),R=document.querySelector(".popup__input_add_link"),U=document.querySelector(".profile__edit-button"),D=document.querySelector(".popup__input_profile_name"),A=document.querySelector(".popup__input_profile_occupation"),V=document.querySelector(".profile__avatar"),N=(document.querySelector(".popup_profile"),document.querySelector(".profile__add-button")),F=document.querySelector(".profile__name"),J=document.querySelector(".profile__occupation"),H=document.querySelector(".popup__form_type_profile"),M=(document.querySelector(".popup_img"),document.querySelector(".popup__image"),document.querySelector(".popup__img-title"),document.querySelector(".popup_delete"),document.querySelector(".popup_avatar"),document.querySelector(".popup__input_avatar_link")),z=document.querySelector(".popup__form_type_avatar"),$=document.querySelector(".profile__edit-image"),G=(document.querySelectorAll(".popup__btn-close"),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_state_invalid"});function K(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Q=new r(G,H),W=new r(G,P),X=new r(G,z),Y=new C({nameSelector:".profile__name",infoSelector:".profile__occupation",avatarSelector:".profile__avatar"}),Z=new E({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-19/",headers:{authorization:"a19e97f8-e3c3-444b-acd8-2259e79e6607","Content-Type":"application/json"}});function ee(e){var n=new t({likes:e.likes,cardId:e._id,name:e.name,link:e.link,owner:e.owner},{handleCardClick:function(){ne.open(e)},handleLikeClick:function(){(n.isCardLikedThisUser()?Z.deleteLike(n.getIdCard()):Z.likeCard(n.getIdCard())).then((function(e){n.setCountLikes(e.likes),n.renderLikes(),n.handleLikeButton()})).catch((function(e){return console.log(e)}))},handleTrashClick:function(){re.open(n)}},"#card","b59a6ec5aff25fa0294bfaf3");return n.createCard()}Promise.all([Z.getUserInfo(),Z.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return K(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?K(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];F.textContent=o.name,J.textContent=o.about,V.src=o.avatar,te.renderItems(i)})).catch((function(e){return console.log(e)}));var te=new i({renderer:function(e){var t=ee(e);te.addItem(t)}},".grid-items"),ne=new _(".popup_img"),re=new x(".popup_delete",(function(e){!function(e){re.setBtnText("Удаление..."),Z.removeCard(e.getIdCard()).then((function(t){e.deleteCard(),re.close()})).finally((function(){setTimeout((function(){re.setDefaultBtnText()}),500)}))}(e)})),oe=new g(".popup_profile",(function(){var e={name:D.value,occupation:A.value};oe.setBtnText("Сохранение..."),Z.setUserInfo(e.name,e.occupation).then((function(e){Y.setUserInfo(e.name,e.about),oe.close()})).catch((function(e){return console.log(e)})).finally((function(){setTimeout((function(){oe.setDefaultBtnText()}),500)}))})),ie=new g(".popup_avatar",(function(){ie.setBtnText("Сохранение..."),Z.setAvatar(M.value).then((function(e){Y.setAvatar(e.avatar),ie.close()})).catch((function(e){return console.log(e)})).finally((function(){setTimeout((function(){ie.setDefaultBtnText()}),500)}))})),ue=new g(".popup_add",(function(){ue.setBtnText("Создание..."),Z.setNewCard(j,R).then((function(e){var t=ee(e);te.addItem(t,!0),ue.close()})).catch((function(e){return console.log(e)})).finally((function(){setTimeout((function(){ue.setDefaultBtnText()}),500)}))}));oe.setEventListeners(),ue.setEventListeners(),ne.setEventListeners(),re.setEventListeners(),ie.setEventListeners(),U.addEventListener("click",(function(){var e=Y.getUserInfo();D.value=e.nameItem,A.value=e.infoItem,Q.cleanInputErrors(),oe.open()})),N.addEventListener("click",(function(){P.reset(),W.cleanInputErrors(),ue.open()})),$.addEventListener("click",(function(){X.cleanInputErrors(),ie.open()})),Q.enableValidation(),W.enableValidation(),X.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,